{"code":"!function(e){var n={};function r(t){if(n[t])return n[t].exports;var s=n[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var s in e)r.d(t,s,function(n){return e[n]}.bind(null,s));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,\"a\",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p=\"\",r(r.s=\"./app/app.js\")}({\"./app/app.js\":\n/*!********************!*\\\n  !*** ./app/app.js ***!\n  \\********************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\n__webpack_require__(/*! ./game.js */ \"./app/game.js\");\\n\\nvar Session =\\n/*#__PURE__*/\\nfunction () {\\n  function Session() {\\n    _classCallCheck(this, Session);\\n\\n    this.game;\\n    this.canvas;\\n    this.globalTimer;\\n    this.resourcesDisplay;\\n  }\\n\\n  _createClass(Session, [{\\n    key: \"initialize\",\\n    value: function initialize() {\\n      this.game = new Clempire();\\n      this.game.load.then(function () {\\n        window.addEventListener(\\'resize\\', this.resizeHandler(), true);\\n        this.drawGame();\\n        this.displayResources();\\n        this.startGame();\\n      }.bind(this));\\n    }\\n  }, {\\n    key: \"resizeHandler\",\\n    value: function resizeHandler() {\\n      var context = {\\n        session: this,\\n        // wait 100ms for further resizing \\n        delta: 100,\\n        timeout: false\\n      };\\n      return function () {\\n        console.log(context);\\n        context.rtime = new Date();\\n\\n        if (!context.timeout) {\\n          context.timeout = true;\\n          setTimeout(context.session.resizeEnd.bind(context), context.delta);\\n        }\\n      };\\n    }\\n  }, {\\n    key: \"resizeEnd\",\\n    value: function resizeEnd() {\\n      console.log(this);\\n\\n      if (new Date() - this.rtime < this.delta) {\\n        setTimeout(this.session.resizeEnd.bind(this), this.delta);\\n      } else {\\n        this.timeout = false;\\n        this.session.drawGame.apply(this.session);\\n      }\\n    }\\n  }, {\\n    key: \"drawGame\",\\n    value: function drawGame() {\\n      this.canvas = document.getElementById(\"mainCanvas\");\\n      var leftSide = document.getElementById(\"left-side\");\\n      this.canvas.width = leftSide.offsetWidth;\\n      this.canvas.height = leftSide.offsetHeight;\\n      this.displaySources();\\n      this.displayBuildings();\\n    }\\n  }, {\\n    key: \"startGame\",\\n    value: function startGame() {\\n      this.globalTimer = setInterval(this.tick.bind(this), 200);\\n    }\\n  }, {\\n    key: \"tick\",\\n    value: function tick() {\\n      this.updateResources();\\n    }\\n  }, {\\n    key: \"displaySources\",\\n    value: function displaySources() {\\n      var _this = this;\\n\\n      var context = this.canvas.getContext(\"2d\");\\n      this.placeResourceAnchors();\\n      var resourceFields = document.getElementsByClassName(\"resource-field\");\\n      var counter = 0;\\n      var topGridSize = this.canvas.height / (resourceFields.length + 1);\\n\\n      var _loop = function _loop(source) {\\n        if (counter === resourceFields.length) {\\n          throw new Error(\"Not enogh resource fields!\");\\n        }\\n\\n        var image = new Image(); // ToDo: cache image... atm this is reloading on every resize\\n\\n        image.onload = function () {\\n          context.drawImage(image, 0, 0, image.width, image.height, this.canvas.width * 0.5 - 85, this.topGridSize * (this.counter + 1) - 85, 170, 170);\\n        }.bind({\\n          canvas: _this.canvas,\\n          counter: counter,\\n          topGridSize: topGridSize\\n        });\\n\\n        image.src = _this.game.sourcesData[source].img;\\n        var field = resourceFields[counter];\\n        field.onclick = _this.game.fieldClick.bind(_this.game.sourcesData[source]);\\n        counter++;\\n      };\\n\\n      for (var source in this.game.sourcesData) {\\n        _loop(source);\\n      }\\n    }\\n  }, {\\n    key: \"placeResourceAnchors\",\\n    value: function placeResourceAnchors() {\\n      var count = 1;\\n      var length = this.game.sourcesData.length;\\n      var anchors = document.getElementById(\"anchors\");\\n\\n      while (anchors.firstChild) {\\n        anchors.removeChild(anchors.firstChild);\\n      }\\n\\n      for (var source in this.game.sourcesData) {\\n        var anchor = document.createElement(\"div\");\\n        anchor.classList.add(\"resource-field-anchor\");\\n        anchor.setAttribute(\"data-source-field\", count.toString());\\n        anchor.style.top = \"\".concat(100 / (length + 1) * count, \"%\");\\n        anchor.style.left = \"50%\";\\n        var field = document.createElement(\"div\");\\n        field.classList.add(\"resource-field\");\\n        field.style.cursor = \"url(\".concat(this.game.sourcesData[source].cursor, \"), pointer\");\\n        anchor.appendChild(field);\\n        anchors.appendChild(anchor);\\n        count++;\\n      }\\n    }\\n  }, {\\n    key: \"displayResources\",\\n    value: function displayResources() {\\n      this.resourcesDisplay = document.querySelector(\"#resources ul\"); // clear list in case of a redraw due to window resize or new resources\\n\\n      while (this.resourcesDisplay.firstChild) {\\n        this.resourcesDisplay.removeChild(this.resourcesDisplay.firstChild);\\n      }\\n\\n      for (var resource in this.game.resourcesData) {\\n        var display = document.createElement(\"li\");\\n        var label = document.createElement(\"div\");\\n        label.style.background = \"url(\".concat(this.game.resourcesData[resource].icon, \")  no-repeat\");\\n        display.appendChild(label);\\n        var count = document.createElement(\"span\");\\n        count.classList.add(\"resource-count\");\\n        display.appendChild(count);\\n        display.setAttribute(\"data-resource\", resource);\\n        this.resourcesDisplay.appendChild(display);\\n      }\\n    }\\n  }, {\\n    key: \"displayBuildings\",\\n    value: function displayBuildings() {\\n      this.buildingsDisplay = document.getElementById(\"buildings\"); // clear list in case of a redraw due to window resize or new resources\\n\\n      while (this.buildingsDisplay.firstChild) {\\n        this.buildingsDisplay.removeChild(this.buildingsDisplay.firstChild);\\n      }\\n\\n      for (var buildingIndex in this.game.buildingsData) {\\n        var display = document.createElement(\"div\");\\n        var building = this.game.buildingsData[buildingIndex];\\n        display.style.background = \"url(\".concat(building.icon, \")  no-repeat\");\\n        display.setAttribute(\"title\", \"\".concat(building.title, \"\\\\n\\\\n\").concat(building.description));\\n        this.buildingsDisplay.appendChild(display);\\n      }\\n    }\\n  }, {\\n    key: \"updateResources\",\\n    value: function updateResources() {\\n      for (var i = 0; i < this.resourcesDisplay.children.length; i++) {\\n        var resourceDisplay = this.resourcesDisplay.children[i];\\n        resourceDisplay.getElementsByTagName(\"span\")[0].innerText = this.game.resources.current[resourceDisplay.dataset.resource];\\n      }\\n    }\\n  }]);\\n\\n  return Session;\\n}();\\n\\nvar session = new Session();\\nwindow.addEventListener(\"load\", session.initialize.bind(session), true);\\n\\n//# sourceURL=webpack:///./app/app.js?')},\"./app/audio.js\":\n/*!**********************!*\\\n  !*** ./app/audio.js ***!\n  \\**********************/\n/*! no static exports found */function(module,exports){eval('function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nvar AudioPlayer =\\n/*#__PURE__*/\\nfunction () {\\n  function AudioPlayer() {\\n    _classCallCheck(this, AudioPlayer);\\n\\n    this.sounds = {};\\n\\n    try {\\n      // Fix up for prefixing\\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\\n      this.audioContext = new AudioContext();\\n\\n      if (window.Worker) {\\n        this.worker = new Worker(\"soundWorker.js\");\\n\\n        this.worker.onmessage = function (e) {\\n          this.audioContext.decodeAudioData(e.data.response, function (buffer) {\\n            this.sounds[e.data.id].buffer = buffer;\\n          }.bind(this), this.onError);\\n        }.bind(this);\\n      } else {\\n        console.log(\\'Your browser doesn\\\\\\'t support web workers.\\');\\n      }\\n    } catch (e) {\\n      alert(\\'Web Audio API is not supported in this browser\\\\n\\\\nThis game will not have any sounds :(\\');\\n      this.audioContext = undefined;\\n    }\\n  }\\n\\n  _createClass(AudioPlayer, [{\\n    key: \"addSound\",\\n    value: function addSound(id, url) {\\n      if (!this.audioContext) return;\\n      this.sounds[id] = new Sound(url, id);\\n      this.sounds[id].prepare(this.worker, this.audioContext);\\n    }\\n  }, {\\n    key: \"playSound\",\\n    value: function playSound(id) {\\n      if (!this.audioContext) return;\\n      var sound = this.sounds[id];\\n      var source = this.audioContext.createBufferSource();\\n      source.buffer = sound.buffer;\\n      source.connect(this.audioContext.destination);\\n      source.start(0);\\n    }\\n  }, {\\n    key: \"onError\",\\n    value: function onError(error) {\\n      console.log(\"Error while loading a sound\");\\n      console.log(error);\\n    }\\n  }]);\\n\\n  return AudioPlayer;\\n}();\\n\\nvar Sound =\\n/*#__PURE__*/\\nfunction () {\\n  function Sound(url, id) {\\n    _classCallCheck(this, Sound);\\n\\n    this.sourceURL = url;\\n    this.id = id;\\n    this.buffer = undefined;\\n  }\\n\\n  _createClass(Sound, [{\\n    key: \"prepare\",\\n    value: function prepare(worker, audioContext) {\\n      if (!worker) return;\\n      worker.postMessage({\\n        id: this.id,\\n        url: this.sourceURL\\n      });\\n    }\\n  }]);\\n\\n  return Sound;\\n}();\\n\\n//# sourceURL=webpack:///./app/audio.js?')},\"./app/game.js\":\n/*!*********************!*\\\n  !*** ./app/game.js ***!\n  \\*********************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\\n\\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\\n\\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\\n\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\n\\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\\n\\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\n__webpack_require__(/*! ./audio.js */ \"./app/audio.js\");\\n\\nvar Clempire =\\n/*#__PURE__*/\\nfunction () {\\n  function Clempire(session) {\\n    _classCallCheck(this, Clempire);\\n\\n    this.audio = new AudioPlayer();\\n    this.load = new Promise(function (resolve, reject) {\\n      var now = new Date().getTime();\\n      console.log(\"Loading data ...\");\\n      this.loadData().then(function () {\\n        this.resources = {\\n          produced: {},\\n          gathered: {},\\n          current: {}\\n        };\\n\\n        for (var type in this.resources) {\\n          for (var resource in this.resourcesData) {\\n            this.resources[type][resource] = 0;\\n          }\\n        }\\n\\n        console.log(\"... done in \".concat(new Date().getTime() - now, \"ms\"));\\n        resolve();\\n      }.bind(this));\\n    }.bind(this));\\n  }\\n\\n  _createClass(Clempire, [{\\n    key: \"loadData\",\\n    value: function () {\\n      var _loadData = _asyncToGenerator(\\n      /*#__PURE__*/\\n      regeneratorRuntime.mark(function _callee() {\\n        var loadingResources, loadingBuildings, loadingSources, _ref, _ref2, source;\\n\\n        return regeneratorRuntime.wrap(function _callee$(_context) {\\n          while (1) {\\n            switch (_context.prev = _context.next) {\\n              case 0:\\n                loadingResources = fetch(\"/assets/data/resources.json\")[\"catch\"](function (e) {\\n                  return console.log(e);\\n                }).then(function (response) {\\n                  return response.json();\\n                });\\n                loadingBuildings = fetch(\"/assets/data/buildings.json\")[\"catch\"](function (e) {\\n                  return console.log(e);\\n                }).then(function (response) {\\n                  return response.json();\\n                });\\n                loadingSources = fetch(\"/assets/data/sources.json\")[\"catch\"](function (e) {\\n                  return console.log(e);\\n                }).then(function (response) {\\n                  return response.json();\\n                });\\n                _context.next = 5;\\n                return Promise.all([loadingResources, loadingBuildings, loadingSources]);\\n\\n              case 5:\\n                _ref = _context.sent;\\n                _ref2 = _slicedToArray(_ref, 3);\\n                this.resourcesData = _ref2[0];\\n                this.buildingsData = _ref2[1];\\n                this.sourcesData = _ref2[2];\\n\\n                for (source in this.sourcesData) {\\n                  this.audio.addSound(this.sourcesData[source].id, this.sourcesData[source].sound);\\n                }\\n\\n              case 11:\\n              case \"end\":\\n                return _context.stop();\\n            }\\n          }\\n        }, _callee, this);\\n      }));\\n\\n      function loadData() {\\n        return _loadData.apply(this, arguments);\\n      }\\n\\n      return loadData;\\n    }()\\n  }, {\\n    key: \"fieldClick\",\\n    value: function fieldClick() {\\n      // called for a click on a resource field.\\n      // this is binded to the clicked resource object\\n      session.game.resources.current[this.id]++;\\n      session.game.resources.gathered[this.id]++;\\n      session.game.audio.playSound(this.id);\\n    }\\n  }, {\\n    key: \"isReqMet\",\\n    value: function isReqMet(req) {\\n      for (var category in req.resources) {\\n        for (var resource in this.resourcesData) {\\n          if (!req.resources[category][resource] || req.resources[category][resource] > this.resources[category][resource]) {\\n            return false;\\n          }\\n        }\\n      }\\n\\n      return true;\\n    }\\n  }]);\\n\\n  return Clempire;\\n}();\\n\\nvar Requirement = function Requirement() {\\n  _classCallCheck(this, Requirement);\\n\\n  this.resources = {\\n    produced: {},\\n    gathered: {},\\n    total: {}\\n  };\\n};\\n\\n//# sourceURL=webpack:///./app/game.js?')}});","extractedComments":[]}