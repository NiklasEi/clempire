{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{\"./app/audio.js\":\n/*!**********************!*\\\n  !*** ./app/audio.js ***!\n  \\**********************/\n/*! no static exports found */function(module,exports){eval(\"class AudioPlayer {\\n  constructor() {\\n    this.sounds = {};\\n    try {\\n      // Fix up for prefixing\\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\\n      this.audioContext = new AudioContext();\\n      if (window.Worker) {\\n        this.worker = new Worker(\\\"soundWorker.js\\\")\\n        this.worker.onmessage = function (e) {\\n          this.audioContext.decodeAudioData(e.data.response, function (buffer) {\\n            this.sounds[e.data.id].buffer = buffer;\\n          }.bind(this), this.onError);\\n        }.bind(this);\\n      } else {\\n        console.log('Your browser doesn\\\\'t support web workers.')\\n      }\\n    } catch (e) {\\n      alert('Web Audio API is not supported in this browser\\\\n\\\\nThis game will not have any sounds :(');\\n      this.audioContext = undefined;\\n    }\\n  }\\n\\n  addSound(id, url) {\\n    if (!this.audioContext) return;\\n    this.sounds[id] = new Sound(url, id);\\n    this.sounds[id].prepare(this.worker, this.audioContext);\\n  }\\n\\n  playSound(id) {\\n    if (!this.audioContext) return;\\n    let sound = this.sounds[id];\\n    let source = this.audioContext.createBufferSource();\\n    source.buffer = sound.buffer;\\n    source.connect(this.audioContext.destination);\\n    source.start(0);\\n  }\\n\\n  onError(error) {\\n    console.log(\\\"Error while loading a sound\\\")\\n    console.log(error)\\n  }\\n}\\n\\nclass Sound {\\n  constructor(url, id) {\\n    this.sourceURL = url;\\n    this.id = id;\\n    this.buffer = undefined;\\n  }\\n\\n  prepare(worker, audioContext) {\\n    if (!worker) return;\\n    worker.postMessage({\\n      id: this.id,\\n      url: this.sourceURL\\n    })\\n  }\\n}\\n\\nmodule.exports = {\\n  AudioPlayer,\\n  Sound\\n};\\n\\n//# sourceURL=webpack:///./app/audio.js?\")},\"./app/game.js\":\n/*!*********************!*\\\n  !*** ./app/game.js ***!\n  \\*********************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('__webpack_require__ (/*! ./audio.js */ \"./app/audio.js\")\\nconsole.log(\"loading game\")\\n\\nclass Clempire {\\n  constructor(session) {\\n    this.audio = new AudioPlayer();\\n    this.load = new Promise(function (resolve, reject) {\\n      let now = (new Date).getTime();\\n      console.log(\"Loading data ...\");\\n      this.loadData().then(function () {\\n        this.resources = {\\n          produced: {},\\n          gathered: {},\\n          current: {}\\n        };\\n        for (let type in this.resources) {\\n          for (let resource in this.resourcesData) {\\n            this.resources[type][resource] = 0;\\n          }\\n        }\\n        console.log(`... done in ${((new Date()).getTime() - now)}ms`);\\n        resolve()\\n      }.bind(this));\\n    }.bind(this));\\n  }\\n\\n  async loadData() {\\n    let loadingResources = fetch(\"/assets/data/resources.json\")\\n      .catch(e => console.log(e))\\n      .then(response => response.json());\\n    let loadingBuildings = fetch(\"/assets/data/buildings.json\")\\n      .catch(e => console.log(e))\\n      .then(response => response.json());\\n    let loadingSources = fetch(\"/assets/data/sources.json\")\\n      .catch(e => console.log(e))\\n      .then(response => response.json());\\n    [this.resourcesData, this.buildingsData, this.sourcesData] = await Promise.all([loadingResources, loadingBuildings, loadingSources]);\\n    for (let source in this.sourcesData) {\\n      this.audio.addSound(this.sourcesData[source].id, this.sourcesData[source].sound);\\n    }\\n  }\\n\\n  fieldClick() {\\n    // called for a click on a resource field.\\n    // this is binded to the clicked resource object\\n    session.game.resources.current[this.id]++;\\n    session.game.resources.gathered[this.id]++;\\n    session.game.audio.playSound(this.id);\\n  }\\n\\n  isReqMet(req) {\\n    for (let category in req.resources) {\\n      for (let resource in this.resourcesData) {\\n        if(!req.resources[category][resource] || req.resources[category][resource] > this.resources[category][resource]) {\\n          return false;\\n        }\\n      }\\n    }\\n    return true;\\n  }\\n}\\n\\nclass Requirement {\\n  constructor() {\\n    this.resources = {\\n      produced: {},\\n      gathered: {},\\n      total: {}\\n    }\\n  }\\n}\\n\\nmodule.exports = {\\n  Clempire,\\n  Requirement\\n};\\n\\n//# sourceURL=webpack:///./app/game.js?')}}]);","extractedComments":[]}