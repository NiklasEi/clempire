{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{\"./app/audio.js\":\n/*!**********************!*\\\n  !*** ./app/audio.js ***!\n  \\**********************/\n/*! no static exports found */function(module,exports){eval(\"class AudioPlayer {\\n  constructor() {\\n    this.sounds = {};\\n    try {\\n      // Fix up for prefixing\\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\\n      this.audioContext = new AudioContext();\\n      if (window.Worker) {\\n        this.worker = new Worker(\\\"soundWorker.js\\\")\\n        this.worker.onmessage = function (e) {\\n          this.audioContext.decodeAudioData(e.data.response, function (buffer) {\\n            this.sounds[e.data.id].buffer = buffer;\\n          }.bind(this), this.onError);\\n        }.bind(this);\\n      } else {\\n        console.log('Your browser doesn\\\\'t support web workers.')\\n      }\\n    } catch (e) {\\n      alert('Web Audio API is not supported in this browser\\\\n\\\\nThis game will not have any sounds :(');\\n      this.audioContext = undefined;\\n    }\\n  }\\n\\n  addSound(id, url) {\\n    if (!this.audioContext) return;\\n    this.sounds[id] = new Sound(url, id);\\n    this.sounds[id].prepare(this.worker, this.audioContext);\\n  }\\n\\n  playSound(id) {\\n    if (!this.audioContext) return;\\n    let sound = this.sounds[id];\\n    let source = this.audioContext.createBufferSource();\\n    source.buffer = sound.buffer;\\n    source.connect(this.audioContext.destination);\\n    source.start(0);\\n  }\\n\\n  onError(error) {\\n    console.log(\\\"Error while loading a sound\\\")\\n    console.log(error)\\n  }\\n}\\n\\nclass Sound {\\n  constructor(url, id) {\\n    this.sourceURL = url;\\n    this.id = id;\\n    this.buffer = undefined;\\n  }\\n\\n  prepare(worker, audioContext) {\\n    if (!worker) return;\\n    worker.postMessage({\\n      id: this.id,\\n      url: this.sourceURL\\n    })\\n  }\\n}\\n\\nmodule.exports = {\\n  AudioPlayer,\\n  Sound\\n};\\n\\n//# sourceURL=webpack:///./app/audio.js?\")}}]);","extractedComments":[]}